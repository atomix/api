/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.map;

import "atomix/primitive/primitive.proto";
import "gogoproto/gogo.proto";

message Message {
    atomix.primitive.Name target = 1;

    oneof message {
        BootstrapRequest bootstrap_request = 2;
        AntiEntropyAdvertisement anti_entropy_advertisement = 3;
        UpdateRequest update_request = 4;
        Update update = 5;
    }
}

message BootstrapRequest {
}

message AntiEntropyAdvertisement {
    map<string, Digest> digest = 1;
}

message UpdateRequest {
    repeated string keys = 1;
}

message Update {
    repeated UpdateEntry updates = 1;
}

message UpdateEntry {
    string key = 1;
    MapValue value = 2;
}

message MapValue {
    Digest digest = 1;
    bytes value = 2;
}

message Digest {
    uint64 timestamp = 1;
    bool tombstone = 2;
}

// GossipMapService implements a distributed map
service GossipMapService {
    // Connect connects to a peer
    rpc Connect(stream Message) returns (stream Message);
}
