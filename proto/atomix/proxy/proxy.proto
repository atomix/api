/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.proxy;

import "gogoproto/gogo.proto";
import "atomix/protocol/protocol.proto";

// ProxyMeta is a proxy metadata
message ProxyMeta {
    string host = 2;
    int32 port = 3;
}

// PrimitiveConfig is a primitive configuration
message PrimitiveConfig {
    string name = 1;
    string type = 2;
    string driver = 3;
    map<string, string> options = 4;
}

message AddPrimitiveRequest {
    PrimitiveConfig primitive = 1 [(gogoproto.nullable) = false];
}

message AddPrimitiveResponse {

}

message RemovePrimitiveRequest {
    string name = 1;
}

message RemovePrimitiveResponse {

}

// Proxy configuration
message ProxyConfig {
    atomix.protocol.ProtocolConfig protocol = 1 [(gogoproto.nullable) = false];
}

message UpdateConfigRequest {
    ProxyConfig config = 1 [(gogoproto.nullable) = false];
}

message UpdateConfigResponse {

}

// Atomix proxy configuration service
service ProxyConfigService {
    // UpdateConfig updates the storage configuration
    rpc UpdateConfig (UpdateConfigRequest) returns (UpdateConfigResponse);
}
