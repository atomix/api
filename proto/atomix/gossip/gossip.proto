/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.gossip;

import "gogoproto/gogo.proto";

// Gossip group identifier
message GossipGroupId {
    string name = 1;
    string namespace = 2;
}

// Gossip group
message GossipGroup {
    GossipGroupId id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];
    repeated Member members = 2 [(gogoproto.nullable) = false];
}

// Member identifier
message MemberId {
    string name = 1;
    string namespace = 2;
}

// Gossip member
message Member {
    MemberId id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];
    string host = 2;
    int32 port = 3;
}

message JoinGossipGroupRequest {
    MemberId member_id = 1 [(gogoproto.customname) = "MemberID"];
    GossipGroupId group_id = 2 [(gogoproto.customname) = "GroupID", (gogoproto.nullable) = false];
}

message JoinGossipGroupResponse {
    GossipGroup group = 1 [(gogoproto.nullable) = false];
}

// Gossip service
service GossipService {
    // Joins a member to a gossip group
    rpc JoinGossipGroup (JoinGossipGroupRequest) returns (stream JoinGossipGroupResponse);
}
