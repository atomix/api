// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: atomix/membership/membership.proto

package membership

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Cluster identifier
type ClusterId struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterId) Reset()         { *m = ClusterId{} }
func (m *ClusterId) String() string { return proto.CompactTextString(m) }
func (*ClusterId) ProtoMessage()    {}
func (*ClusterId) Descriptor() ([]byte, []int) {
	return fileDescriptor_907f8caf41e45230, []int{0}
}
func (m *ClusterId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterId.Unmarshal(m, b)
}
func (m *ClusterId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterId.Marshal(b, m, deterministic)
}
func (m *ClusterId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterId.Merge(m, src)
}
func (m *ClusterId) XXX_Size() int {
	return xxx_messageInfo_ClusterId.Size(m)
}
func (m *ClusterId) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterId.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterId proto.InternalMessageInfo

func (m *ClusterId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterId) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Member identifier
type MemberId struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberId) Reset()         { *m = MemberId{} }
func (m *MemberId) String() string { return proto.CompactTextString(m) }
func (*MemberId) ProtoMessage()    {}
func (*MemberId) Descriptor() ([]byte, []int) {
	return fileDescriptor_907f8caf41e45230, []int{1}
}
func (m *MemberId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberId.Unmarshal(m, b)
}
func (m *MemberId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberId.Marshal(b, m, deterministic)
}
func (m *MemberId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberId.Merge(m, src)
}
func (m *MemberId) XXX_Size() int {
	return xxx_messageInfo_MemberId.Size(m)
}
func (m *MemberId) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberId.DiscardUnknown(m)
}

var xxx_messageInfo_MemberId proto.InternalMessageInfo

func (m *MemberId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MemberId) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Member is a cluster member
type Member struct {
	ID                   MemberId `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_907f8caf41e45230, []int{2}
}
func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetID() MemberId {
	if m != nil {
		return m.ID
	}
	return MemberId{}
}

func (m *Member) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Member) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// JoinClusterRequest is a request to join a cluster
type JoinClusterRequest struct {
	Member               *Member   `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	ClusterID            ClusterId `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinClusterRequest) Reset()         { *m = JoinClusterRequest{} }
func (m *JoinClusterRequest) String() string { return proto.CompactTextString(m) }
func (*JoinClusterRequest) ProtoMessage()    {}
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_907f8caf41e45230, []int{3}
}
func (m *JoinClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinClusterRequest.Unmarshal(m, b)
}
func (m *JoinClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinClusterRequest.Marshal(b, m, deterministic)
}
func (m *JoinClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinClusterRequest.Merge(m, src)
}
func (m *JoinClusterRequest) XXX_Size() int {
	return xxx_messageInfo_JoinClusterRequest.Size(m)
}
func (m *JoinClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinClusterRequest proto.InternalMessageInfo

func (m *JoinClusterRequest) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *JoinClusterRequest) GetClusterID() ClusterId {
	if m != nil {
		return m.ClusterID
	}
	return ClusterId{}
}

// JoinClusterResponse is a response to joining a cluster
type JoinClusterResponse struct {
	ClusterID            ClusterId `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id"`
	Members              []Member  `protobuf:"bytes,2,rep,name=members,proto3" json:"members"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinClusterResponse) Reset()         { *m = JoinClusterResponse{} }
func (m *JoinClusterResponse) String() string { return proto.CompactTextString(m) }
func (*JoinClusterResponse) ProtoMessage()    {}
func (*JoinClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_907f8caf41e45230, []int{4}
}
func (m *JoinClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinClusterResponse.Unmarshal(m, b)
}
func (m *JoinClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinClusterResponse.Marshal(b, m, deterministic)
}
func (m *JoinClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinClusterResponse.Merge(m, src)
}
func (m *JoinClusterResponse) XXX_Size() int {
	return xxx_messageInfo_JoinClusterResponse.Size(m)
}
func (m *JoinClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinClusterResponse proto.InternalMessageInfo

func (m *JoinClusterResponse) GetClusterID() ClusterId {
	if m != nil {
		return m.ClusterID
	}
	return ClusterId{}
}

func (m *JoinClusterResponse) GetMembers() []Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterId)(nil), "atomix.membership.ClusterId")
	proto.RegisterType((*MemberId)(nil), "atomix.membership.MemberId")
	proto.RegisterType((*Member)(nil), "atomix.membership.Member")
	proto.RegisterType((*JoinClusterRequest)(nil), "atomix.membership.JoinClusterRequest")
	proto.RegisterType((*JoinClusterResponse)(nil), "atomix.membership.JoinClusterResponse")
}

func init() { proto.RegisterFile("atomix/membership/membership.proto", fileDescriptor_907f8caf41e45230) }

var fileDescriptor_907f8caf41e45230 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2c, 0xc9, 0xcf,
	0xcd, 0xac, 0xd0, 0xcf, 0x4d, 0xcd, 0x4d, 0x4a, 0x2d, 0x2a, 0xce, 0xc8, 0x2c, 0x40, 0x62, 0xea,
	0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x09, 0x42, 0xd4, 0xe8, 0x21, 0x24, 0xa4, 0x44, 0xd2, 0xf3,
	0xd3, 0xf3, 0xc1, 0xb2, 0xfa, 0x20, 0x16, 0x44, 0xa1, 0x92, 0x2d, 0x17, 0xa7, 0x73, 0x4e, 0x69,
	0x71, 0x49, 0x6a, 0x91, 0x67, 0x8a, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x24, 0xc3, 0xc5, 0x09, 0xa2, 0x8b, 0x0b, 0x12, 0x93,
	0x53, 0x25, 0x98, 0xc0, 0x12, 0x08, 0x01, 0x25, 0x1b, 0x2e, 0x0e, 0x5f, 0xb0, 0x15, 0x64, 0xe9,
	0xce, 0xe4, 0x62, 0x83, 0xe8, 0x16, 0x32, 0xe7, 0x62, 0xca, 0x4c, 0x01, 0xeb, 0xe4, 0x36, 0x92,
	0xd6, 0xc3, 0x70, 0xbc, 0x1e, 0xcc, 0x12, 0x27, 0xae, 0x13, 0xf7, 0xe4, 0x19, 0x1e, 0xdd, 0x93,
	0x67, 0xf2, 0x74, 0x09, 0x62, 0xca, 0x04, 0x5b, 0x9a, 0x91, 0x5f, 0x5c, 0x02, 0x35, 0x1b, 0xcc,
	0x06, 0x89, 0x15, 0xe4, 0x17, 0x95, 0x48, 0x30, 0x2b, 0x30, 0x6a, 0xb0, 0x06, 0x81, 0xd9, 0x4a,
	0xd3, 0x19, 0xb9, 0x84, 0xbc, 0xf2, 0x33, 0xf3, 0xa0, 0x9e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x32, 0xe4, 0x62, 0x83, 0xd8, 0x02, 0xb5, 0x5b, 0x12, 0xa7, 0xdd, 0x41, 0x50, 0x85,
	0x42, 0x7e, 0x5c, 0x5c, 0xc9, 0x10, 0x43, 0xe2, 0x33, 0x53, 0xc0, 0xf6, 0x72, 0x1b, 0xc9, 0x60,
	0xd1, 0x06, 0x0f, 0x56, 0x27, 0x41, 0xa8, 0x9b, 0xe1, 0x21, 0xed, 0x12, 0xc4, 0x99, 0x0c, 0x93,
	0x55, 0x5a, 0xc0, 0xc8, 0x25, 0x8c, 0xe2, 0xb2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x34, 0x7b,
	0x18, 0x29, 0xb5, 0x47, 0xc8, 0x92, 0x8b, 0x1d, 0xaa, 0x4b, 0x82, 0x49, 0x81, 0x19, 0xaf, 0x5f,
	0x9d, 0x58, 0x40, 0x26, 0x05, 0xc1, 0xd4, 0x1b, 0x15, 0x70, 0xf1, 0x41, 0x8d, 0x0c, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x8a, 0xe3, 0xe2, 0x46, 0x72, 0xb3, 0x90, 0x2a, 0x16, 0xa3, 0x30,
	0x43, 0x5b, 0x4a, 0x8d, 0x90, 0x32, 0x88, 0xd7, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0xa9, 0xd3, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x76, 0x71, 0x00, 0x44, 0xec, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterServiceClient is the client API for ClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterServiceClient interface {
	// Joins a member to the cluster
	JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (ClusterService_JoinClusterClient, error)
}

type clusterServiceClient struct {
	cc *grpc.ClientConn
}

func NewClusterServiceClient(cc *grpc.ClientConn) ClusterServiceClient {
	return &clusterServiceClient{cc}
}

func (c *clusterServiceClient) JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (ClusterService_JoinClusterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClusterService_serviceDesc.Streams[0], "/atomix.membership.ClusterService/JoinCluster", opts...)
	if err != nil {
		return nil, err
	}
	x := &clusterServiceJoinClusterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ClusterService_JoinClusterClient interface {
	Recv() (*JoinClusterResponse, error)
	grpc.ClientStream
}

type clusterServiceJoinClusterClient struct {
	grpc.ClientStream
}

func (x *clusterServiceJoinClusterClient) Recv() (*JoinClusterResponse, error) {
	m := new(JoinClusterResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClusterServiceServer is the server API for ClusterService service.
type ClusterServiceServer interface {
	// Joins a member to the cluster
	JoinCluster(*JoinClusterRequest, ClusterService_JoinClusterServer) error
}

// UnimplementedClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServiceServer struct {
}

func (*UnimplementedClusterServiceServer) JoinCluster(req *JoinClusterRequest, srv ClusterService_JoinClusterServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinCluster not implemented")
}

func RegisterClusterServiceServer(s *grpc.Server, srv ClusterServiceServer) {
	s.RegisterService(&_ClusterService_serviceDesc, srv)
}

func _ClusterService_JoinCluster_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JoinClusterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ClusterServiceServer).JoinCluster(m, &clusterServiceJoinClusterServer{stream})
}

type ClusterService_JoinClusterServer interface {
	Send(*JoinClusterResponse) error
	grpc.ServerStream
}

type clusterServiceJoinClusterServer struct {
	grpc.ServerStream
}

func (x *clusterServiceJoinClusterServer) Send(m *JoinClusterResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.membership.ClusterService",
	HandlerType: (*ClusterServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinCluster",
			Handler:       _ClusterService_JoinCluster_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "atomix/membership/membership.proto",
}
