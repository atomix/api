/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.membership;

import "gogoproto/gogo.proto";

// Membership group identifier
message MembershipGroupId {
    string name = 1;
    string namespace = 2;
}

// Membership group
message MembershipGroup {
    MembershipGroupId id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];
    repeated Member members = 2 [(gogoproto.nullable) = false];
}

// Member identifier
message MemberId {
    string name = 1;
    string namespace = 2;
}

// Group member
message Member {
    MemberId id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];
    string host = 2;
    int32 port = 3;
}

message JoinMembershipGroupRequest {
    MemberId member_id = 1 [(gogoproto.customname) = "MemberID"];
    MembershipGroupId group_id = 2 [(gogoproto.customname) = "GroupID", (gogoproto.nullable) = false];
}

message JoinMembershipGroupResponse {
    MembershipGroup group = 1 [(gogoproto.nullable) = false];
}

// Membership service
service MembershipService {
    // Joins a member to a membership group
    rpc JoinMembershipGroup (JoinMembershipGroupRequest) returns (stream JoinMembershipGroupResponse);
}
