// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: atomix/database/database.proto

package database

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Database identifier
type DatabaseId struct {
	// name is the name of the database
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// namespace is the namespace to which the database belongs
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseId) Reset()         { *m = DatabaseId{} }
func (m *DatabaseId) String() string { return proto.CompactTextString(m) }
func (*DatabaseId) ProtoMessage()    {}
func (*DatabaseId) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{0}
}
func (m *DatabaseId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseId.Unmarshal(m, b)
}
func (m *DatabaseId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseId.Marshal(b, m, deterministic)
}
func (m *DatabaseId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseId.Merge(m, src)
}
func (m *DatabaseId) XXX_Size() int {
	return xxx_messageInfo_DatabaseId.Size(m)
}
func (m *DatabaseId) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseId.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseId proto.InternalMessageInfo

func (m *DatabaseId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DatabaseId) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Database configuration
type Database struct {
	// id is the database identifier
	ID DatabaseId `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// partitions is a list of partitions in the cluster
	Partitions           []Partition `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Database) Reset()         { *m = Database{} }
func (m *Database) String() string { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()    {}
func (*Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{1}
}
func (m *Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Database.Unmarshal(m, b)
}
func (m *Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Database.Marshal(b, m, deterministic)
}
func (m *Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Database.Merge(m, src)
}
func (m *Database) XXX_Size() int {
	return xxx_messageInfo_Database.Size(m)
}
func (m *Database) XXX_DiscardUnknown() {
	xxx_messageInfo_Database.DiscardUnknown(m)
}

var xxx_messageInfo_Database proto.InternalMessageInfo

func (m *Database) GetID() DatabaseId {
	if m != nil {
		return m.ID
	}
	return DatabaseId{}
}

func (m *Database) GetPartitions() []Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Database configuration
type DatabaseConfig struct {
	// nodes is a list of database replicas
	Replicas []ReplicaConfig `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas"`
	// partitions is a list of partitions owned by the replicas
	Partitions           []PartitionId `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DatabaseConfig) Reset()         { *m = DatabaseConfig{} }
func (m *DatabaseConfig) String() string { return proto.CompactTextString(m) }
func (*DatabaseConfig) ProtoMessage()    {}
func (*DatabaseConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{2}
}
func (m *DatabaseConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseConfig.Unmarshal(m, b)
}
func (m *DatabaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseConfig.Marshal(b, m, deterministic)
}
func (m *DatabaseConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseConfig.Merge(m, src)
}
func (m *DatabaseConfig) XXX_Size() int {
	return xxx_messageInfo_DatabaseConfig.Size(m)
}
func (m *DatabaseConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseConfig proto.InternalMessageInfo

func (m *DatabaseConfig) GetReplicas() []ReplicaConfig {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *DatabaseConfig) GetPartitions() []PartitionId {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Replica configuration
type ReplicaConfig struct {
	// id is the unique member identifier
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// host is the member host
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// api_port is the port to use for the client API
	APIPort int32 `protobuf:"varint,3,opt,name=api_port,json=apiPort,proto3" json:"apiPort"`
	// protocol_port is the port to use for intra-cluster communication
	ProtocolPort         int32    `protobuf:"varint,4,opt,name=protocol_port,json=protocolPort,proto3" json:"protocolPort"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaConfig) Reset()         { *m = ReplicaConfig{} }
func (m *ReplicaConfig) String() string { return proto.CompactTextString(m) }
func (*ReplicaConfig) ProtoMessage()    {}
func (*ReplicaConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{3}
}
func (m *ReplicaConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaConfig.Unmarshal(m, b)
}
func (m *ReplicaConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaConfig.Marshal(b, m, deterministic)
}
func (m *ReplicaConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaConfig.Merge(m, src)
}
func (m *ReplicaConfig) XXX_Size() int {
	return xxx_messageInfo_ReplicaConfig.Size(m)
}
func (m *ReplicaConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaConfig proto.InternalMessageInfo

func (m *ReplicaConfig) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ReplicaConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ReplicaConfig) GetAPIPort() int32 {
	if m != nil {
		return m.APIPort
	}
	return 0
}

func (m *ReplicaConfig) GetProtocolPort() int32 {
	if m != nil {
		return m.ProtocolPort
	}
	return 0
}

// Partition identifier
type PartitionId struct {
	Partition            int32    `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionId) Reset()         { *m = PartitionId{} }
func (m *PartitionId) String() string { return proto.CompactTextString(m) }
func (*PartitionId) ProtoMessage()    {}
func (*PartitionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{4}
}
func (m *PartitionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionId.Unmarshal(m, b)
}
func (m *PartitionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionId.Marshal(b, m, deterministic)
}
func (m *PartitionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionId.Merge(m, src)
}
func (m *PartitionId) XXX_Size() int {
	return xxx_messageInfo_PartitionId.Size(m)
}
func (m *PartitionId) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionId.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionId proto.InternalMessageInfo

func (m *PartitionId) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

// Partition info
type Partition struct {
	PartitionID          PartitionId         `protobuf:"bytes,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id"`
	Endpoints            []PartitionEndpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{5}
}
func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetPartitionID() PartitionId {
	if m != nil {
		return m.PartitionID
	}
	return PartitionId{}
}

func (m *Partition) GetEndpoints() []PartitionEndpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

// Partition endpoint
type PartitionEndpoint struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionEndpoint) Reset()         { *m = PartitionEndpoint{} }
func (m *PartitionEndpoint) String() string { return proto.CompactTextString(m) }
func (*PartitionEndpoint) ProtoMessage()    {}
func (*PartitionEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{6}
}
func (m *PartitionEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionEndpoint.Unmarshal(m, b)
}
func (m *PartitionEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionEndpoint.Marshal(b, m, deterministic)
}
func (m *PartitionEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionEndpoint.Merge(m, src)
}
func (m *PartitionEndpoint) XXX_Size() int {
	return xxx_messageInfo_PartitionEndpoint.Size(m)
}
func (m *PartitionEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionEndpoint proto.InternalMessageInfo

func (m *PartitionEndpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PartitionEndpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Gets a database in a namespace
type GetDatabaseRequest struct {
	ID                   DatabaseId `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetDatabaseRequest) Reset()         { *m = GetDatabaseRequest{} }
func (m *GetDatabaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetDatabaseRequest) ProtoMessage()    {}
func (*GetDatabaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{7}
}
func (m *GetDatabaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatabaseRequest.Unmarshal(m, b)
}
func (m *GetDatabaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatabaseRequest.Marshal(b, m, deterministic)
}
func (m *GetDatabaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatabaseRequest.Merge(m, src)
}
func (m *GetDatabaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetDatabaseRequest.Size(m)
}
func (m *GetDatabaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatabaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatabaseRequest proto.InternalMessageInfo

func (m *GetDatabaseRequest) GetID() DatabaseId {
	if m != nil {
		return m.ID
	}
	return DatabaseId{}
}

// Returns a database in a namespace
type GetDatabaseResponse struct {
	Database             *Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetDatabaseResponse) Reset()         { *m = GetDatabaseResponse{} }
func (m *GetDatabaseResponse) String() string { return proto.CompactTextString(m) }
func (*GetDatabaseResponse) ProtoMessage()    {}
func (*GetDatabaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{8}
}
func (m *GetDatabaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatabaseResponse.Unmarshal(m, b)
}
func (m *GetDatabaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatabaseResponse.Marshal(b, m, deterministic)
}
func (m *GetDatabaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatabaseResponse.Merge(m, src)
}
func (m *GetDatabaseResponse) XXX_Size() int {
	return xxx_messageInfo_GetDatabaseResponse.Size(m)
}
func (m *GetDatabaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatabaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatabaseResponse proto.InternalMessageInfo

func (m *GetDatabaseResponse) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

// Gets a list of databases in a namespace
type GetDatabasesRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDatabasesRequest) Reset()         { *m = GetDatabasesRequest{} }
func (m *GetDatabasesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDatabasesRequest) ProtoMessage()    {}
func (*GetDatabasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{9}
}
func (m *GetDatabasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatabasesRequest.Unmarshal(m, b)
}
func (m *GetDatabasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatabasesRequest.Marshal(b, m, deterministic)
}
func (m *GetDatabasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatabasesRequest.Merge(m, src)
}
func (m *GetDatabasesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDatabasesRequest.Size(m)
}
func (m *GetDatabasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatabasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatabasesRequest proto.InternalMessageInfo

func (m *GetDatabasesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Returns a list of databases in a namespace
type GetDatabasesResponse struct {
	Databases            []Database `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetDatabasesResponse) Reset()         { *m = GetDatabasesResponse{} }
func (m *GetDatabasesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDatabasesResponse) ProtoMessage()    {}
func (*GetDatabasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed185fa3c5fe0f10, []int{10}
}
func (m *GetDatabasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatabasesResponse.Unmarshal(m, b)
}
func (m *GetDatabasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatabasesResponse.Marshal(b, m, deterministic)
}
func (m *GetDatabasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatabasesResponse.Merge(m, src)
}
func (m *GetDatabasesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDatabasesResponse.Size(m)
}
func (m *GetDatabasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatabasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatabasesResponse proto.InternalMessageInfo

func (m *GetDatabasesResponse) GetDatabases() []Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

func init() {
	proto.RegisterType((*DatabaseId)(nil), "atomix.database.DatabaseId")
	proto.RegisterType((*Database)(nil), "atomix.database.Database")
	proto.RegisterType((*DatabaseConfig)(nil), "atomix.database.DatabaseConfig")
	proto.RegisterType((*ReplicaConfig)(nil), "atomix.database.ReplicaConfig")
	proto.RegisterType((*PartitionId)(nil), "atomix.database.PartitionId")
	proto.RegisterType((*Partition)(nil), "atomix.database.Partition")
	proto.RegisterType((*PartitionEndpoint)(nil), "atomix.database.PartitionEndpoint")
	proto.RegisterType((*GetDatabaseRequest)(nil), "atomix.database.GetDatabaseRequest")
	proto.RegisterType((*GetDatabaseResponse)(nil), "atomix.database.GetDatabaseResponse")
	proto.RegisterType((*GetDatabasesRequest)(nil), "atomix.database.GetDatabasesRequest")
	proto.RegisterType((*GetDatabasesResponse)(nil), "atomix.database.GetDatabasesResponse")
}

func init() { proto.RegisterFile("atomix/database/database.proto", fileDescriptor_ed185fa3c5fe0f10) }

var fileDescriptor_ed185fa3c5fe0f10 = []byte{
	// 543 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0xc5, 0x59, 0xb7, 0x35, 0xb7, 0x1d, 0x03, 0x6f, 0x9a, 0x4a, 0x99, 0x96, 0xca, 0x80, 0x54,
	0x09, 0xa9, 0x13, 0x9d, 0x26, 0x1e, 0x10, 0x68, 0x84, 0x02, 0xaa, 0x04, 0x52, 0x15, 0x40, 0x42,
	0xe2, 0x61, 0xf2, 0x1a, 0x53, 0x2c, 0x6d, 0xb1, 0x49, 0x0c, 0xe2, 0x07, 0xf8, 0x05, 0xfe, 0x80,
	0x07, 0xfe, 0x64, 0x5f, 0x91, 0x87, 0x3d, 0xee, 0x2b, 0x50, 0x9c, 0xd8, 0x4d, 0x96, 0xb5, 0x48,
	0x3c, 0xe5, 0xc6, 0xf7, 0x9c, 0x73, 0x8f, 0x8f, 0x6d, 0xd8, 0xa3, 0x4a, 0x9c, 0xf1, 0x1f, 0xfb,
	0x21, 0x55, 0xf4, 0x84, 0x26, 0xcc, 0x16, 0x03, 0x19, 0x0b, 0x25, 0xf0, 0x66, 0xde, 0x1f, 0x98,
	0xe5, 0xee, 0xf6, 0x4c, 0xcc, 0x84, 0xee, 0xed, 0x67, 0x55, 0x0e, 0x23, 0xcf, 0x00, 0x46, 0x05,
	0x62, 0x1c, 0x62, 0x0c, 0x8d, 0x88, 0x9e, 0xb1, 0x0e, 0xea, 0xa1, 0xbe, 0x1b, 0xe8, 0x1a, 0xef,
	0x82, 0x9b, 0x7d, 0x13, 0x49, 0xa7, 0xac, 0xe3, 0xe8, 0xc6, 0x7c, 0x81, 0xfc, 0x44, 0xd0, 0x34,
	0x02, 0xf8, 0x31, 0x38, 0x3c, 0xd4, 0xe4, 0xd6, 0xf0, 0xee, 0xe0, 0x8a, 0x81, 0xc1, 0x7c, 0x8e,
	0x0f, 0xe7, 0xa9, 0x77, 0xe3, 0x22, 0xf5, 0x9c, 0xf1, 0x28, 0x70, 0x78, 0x88, 0x8f, 0x00, 0x24,
	0x8d, 0x15, 0x57, 0x5c, 0x44, 0x49, 0xc7, 0xe9, 0xad, 0xf4, 0x5b, 0xc3, 0x6e, 0x4d, 0x60, 0x62,
	0x20, 0x7e, 0x23, 0xe3, 0x07, 0x25, 0x0e, 0xf9, 0x85, 0xe0, 0xa6, 0x19, 0xf0, 0x42, 0x44, 0x9f,
	0xf9, 0x0c, 0x1f, 0x41, 0x33, 0x66, 0xf2, 0x94, 0x4f, 0x69, 0xd2, 0x41, 0x5a, 0x72, 0xaf, 0x26,
	0x19, 0xe4, 0x80, 0x9c, 0x51, 0xc8, 0x5a, 0x16, 0xf6, 0xaf, 0xb1, 0xb5, 0xbb, 0xd8, 0xd6, 0x38,
	0xbc, 0xc6, 0xd8, 0x6f, 0x04, 0x1b, 0x95, 0x29, 0x78, 0xc7, 0xa6, 0xe4, 0xfa, 0x6b, 0xa5, 0x10,
	0x30, 0x34, 0xbe, 0x88, 0x44, 0x15, 0x19, 0xeb, 0x1a, 0x3f, 0x82, 0x26, 0x95, 0xfc, 0x58, 0x8a,
	0x58, 0x75, 0x56, 0x7a, 0xa8, 0xbf, 0xea, 0xef, 0x5c, 0xa4, 0xde, 0xfa, 0xf3, 0xc9, 0x78, 0x22,
	0x62, 0x75, 0x99, 0x7a, 0xeb, 0x54, 0xf2, 0xac, 0x0c, 0x4c, 0x81, 0x0f, 0x61, 0x43, 0x1f, 0xed,
	0x54, 0x9c, 0xe6, 0xbc, 0x86, 0xe6, 0xdd, 0xba, 0x4c, 0xbd, 0xb6, 0x69, 0x68, 0x46, 0xe5, 0x8f,
	0x3c, 0x84, 0x56, 0x69, 0x23, 0xd9, 0xa9, 0xdb, 0x4d, 0x68, 0xaf, 0xab, 0xc1, 0x7c, 0x81, 0xfc,
	0x41, 0xe0, 0x5a, 0x34, 0x7e, 0x0f, 0x6d, 0xdb, 0x3a, 0xb6, 0x17, 0x60, 0x79, 0x50, 0x5b, 0xc5,
	0x0d, 0x28, 0x0d, 0x1d, 0x05, 0x2d, 0x59, 0x72, 0xf0, 0x0a, 0x5c, 0x16, 0x85, 0x52, 0xf0, 0x48,
	0x99, 0xec, 0xc9, 0x62, 0xc9, 0x97, 0x05, 0xb4, 0x38, 0x81, 0x39, 0x95, 0x3c, 0x81, 0xdb, 0x35,
	0x94, 0xcd, 0x1a, 0x95, 0xb2, 0xc6, 0xd0, 0xd0, 0x79, 0x39, 0x7a, 0xb7, 0xba, 0x26, 0x6f, 0x01,
	0xbf, 0x66, 0xca, 0x5c, 0xac, 0x80, 0x7d, 0xfd, 0xc6, 0x12, 0xf5, 0xdf, 0xf7, 0x9c, 0xbc, 0x81,
	0xad, 0x8a, 0x5c, 0x22, 0x45, 0x94, 0x30, 0x7c, 0x08, 0x4d, 0xc3, 0x2e, 0x54, 0xef, 0x2c, 0x54,
	0x0d, 0x2c, 0x94, 0x1c, 0x54, 0xd4, 0x12, 0xe3, 0xae, 0xf2, 0x60, 0xd1, 0xd5, 0x07, 0xfb, 0x01,
	0xb6, 0xab, 0xa4, 0xc2, 0xc3, 0x53, 0x70, 0x8d, 0xb0, 0x79, 0x2e, 0x8b, 0x4d, 0x98, 0x94, 0x2d,
	0x63, 0x78, 0x8e, 0x60, 0xd3, 0x74, 0xdf, 0xb1, 0xf8, 0x3b, 0x9f, 0x32, 0xfc, 0x11, 0x5a, 0xa5,
	0x51, 0xf8, 0x5e, 0x4d, 0xae, 0x1e, 0x6d, 0xf7, 0xfe, 0x72, 0x50, 0x61, 0xf6, 0x13, 0xb4, 0xcb,
	0x9b, 0xc0, 0x4b, 0x59, 0x26, 0x98, 0xee, 0x83, 0x7f, 0xa0, 0x72, 0xf1, 0x93, 0x35, 0xfd, 0x2e,
	0x0e, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x06, 0x39, 0x37, 0x2c, 0x62, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DatabaseServiceClient is the client API for DatabaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatabaseServiceClient interface {
	// GetDatabase gets a database controlled by the controller
	GetDatabase(ctx context.Context, in *GetDatabaseRequest, opts ...grpc.CallOption) (*GetDatabaseResponse, error)
	// GetDatabases gets a list of databases controlled by the controller
	GetDatabases(ctx context.Context, in *GetDatabasesRequest, opts ...grpc.CallOption) (*GetDatabasesResponse, error)
}

type databaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatabaseServiceClient(cc *grpc.ClientConn) DatabaseServiceClient {
	return &databaseServiceClient{cc}
}

func (c *databaseServiceClient) GetDatabase(ctx context.Context, in *GetDatabaseRequest, opts ...grpc.CallOption) (*GetDatabaseResponse, error) {
	out := new(GetDatabaseResponse)
	err := c.cc.Invoke(ctx, "/atomix.database.DatabaseService/GetDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) GetDatabases(ctx context.Context, in *GetDatabasesRequest, opts ...grpc.CallOption) (*GetDatabasesResponse, error) {
	out := new(GetDatabasesResponse)
	err := c.cc.Invoke(ctx, "/atomix.database.DatabaseService/GetDatabases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatabaseServiceServer is the server API for DatabaseService service.
type DatabaseServiceServer interface {
	// GetDatabase gets a database controlled by the controller
	GetDatabase(context.Context, *GetDatabaseRequest) (*GetDatabaseResponse, error)
	// GetDatabases gets a list of databases controlled by the controller
	GetDatabases(context.Context, *GetDatabasesRequest) (*GetDatabasesResponse, error)
}

// UnimplementedDatabaseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDatabaseServiceServer struct {
}

func (*UnimplementedDatabaseServiceServer) GetDatabase(ctx context.Context, req *GetDatabaseRequest) (*GetDatabaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatabase not implemented")
}
func (*UnimplementedDatabaseServiceServer) GetDatabases(ctx context.Context, req *GetDatabasesRequest) (*GetDatabasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatabases not implemented")
}

func RegisterDatabaseServiceServer(s *grpc.Server, srv DatabaseServiceServer) {
	s.RegisterService(&_DatabaseService_serviceDesc, srv)
}

func _DatabaseService_GetDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatabaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServiceServer).GetDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.database.DatabaseService/GetDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServiceServer).GetDatabase(ctx, req.(*GetDatabaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseService_GetDatabases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatabasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServiceServer).GetDatabases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.database.DatabaseService/GetDatabases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServiceServer).GetDatabases(ctx, req.(*GetDatabasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatabaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.database.DatabaseService",
	HandlerType: (*DatabaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDatabase",
			Handler:    _DatabaseService_GetDatabase_Handler,
		},
		{
			MethodName: "GetDatabases",
			Handler:    _DatabaseService_GetDatabases_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "atomix/database/database.proto",
}
