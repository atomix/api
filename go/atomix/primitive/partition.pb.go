// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomix/primitive/partition.proto

package primitive

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PartitionStrategy is an enum for indicating the strategy used to partition a primitive
type PartitionStrategy int32

const (
	PartitionStrategy_NONE        PartitionStrategy = 0
	PartitionStrategy_HASH        PartitionStrategy = 1
	PartitionStrategy_RANGE       PartitionStrategy = 2
	PartitionStrategy_RANDOM      PartitionStrategy = 3
	PartitionStrategy_ROUND_ROBIN PartitionStrategy = 4
)

var PartitionStrategy_name = map[int32]string{
	0: "NONE",
	1: "HASH",
	2: "RANGE",
	3: "RANDOM",
	4: "ROUND_ROBIN",
}

var PartitionStrategy_value = map[string]int32{
	"NONE":        0,
	"HASH":        1,
	"RANGE":       2,
	"RANDOM":      3,
	"ROUND_ROBIN": 4,
}

func (x PartitionStrategy) String() string {
	return proto.EnumName(PartitionStrategy_name, int32(x))
}

func (PartitionStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94a787f1a7e40bf4, []int{0}
}

var E_Strategy = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*PartitionStrategy)(nil),
	Field:         71000,
	Name:          "atomix.primitive.partition.strategy",
	Tag:           "varint,71000,opt,name=strategy,enum=atomix.primitive.partition.PartitionStrategy",
	Filename:      "atomix/primitive/partition.proto",
}

var E_Key = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         72000,
	Name:          "atomix.primitive.partition.key",
	Tag:           "varint,72000,opt,name=key",
	Filename:      "atomix/primitive/partition.proto",
}

var E_Range = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         72001,
	Name:          "atomix.primitive.partition.range",
	Tag:           "varint,72001,opt,name=range",
	Filename:      "atomix/primitive/partition.proto",
}

func init() {
	proto.RegisterEnum("atomix.primitive.partition.PartitionStrategy", PartitionStrategy_name, PartitionStrategy_value)
	proto.RegisterExtension(E_Strategy)
	proto.RegisterExtension(E_Key)
	proto.RegisterExtension(E_Range)
}

func init() { proto.RegisterFile("atomix/primitive/partition.proto", fileDescriptor_94a787f1a7e40bf4) }

var fileDescriptor_94a787f1a7e40bf4 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x2c, 0xc9, 0xcf,
	0xcd, 0xac, 0xd0, 0x2f, 0x28, 0xca, 0xcc, 0xcd, 0x2c, 0xc9, 0x2c, 0x4b, 0xd5, 0x2f, 0x48, 0x2c,
	0x2a, 0xc9, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x82, 0xa8,
	0xd0, 0x83, 0xab, 0xd0, 0x83, 0xab, 0x90, 0x52, 0x48, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07,
	0xab, 0x4c, 0x2a, 0x4d, 0xd3, 0x4f, 0x49, 0x2d, 0x4e, 0x2e, 0xca, 0x2c, 0x28, 0xc9, 0x2f, 0x82,
	0xe8, 0xd6, 0xf2, 0xe7, 0x12, 0x0c, 0x80, 0x29, 0x0f, 0x2e, 0x29, 0x4a, 0x2c, 0x49, 0x4d, 0xaf,
	0x14, 0xe2, 0xe0, 0x62, 0xf1, 0xf3, 0xf7, 0x73, 0x15, 0x60, 0x00, 0xb1, 0x3c, 0x1c, 0x83, 0x3d,
	0x04, 0x18, 0x85, 0x38, 0xb9, 0x58, 0x83, 0x1c, 0xfd, 0xdc, 0x5d, 0x05, 0x98, 0x84, 0xb8, 0xb8,
	0xd8, 0x82, 0x1c, 0xfd, 0x5c, 0xfc, 0x7d, 0x05, 0x98, 0x85, 0xf8, 0xb9, 0xb8, 0x83, 0xfc, 0x43,
	0xfd, 0x5c, 0xe2, 0x83, 0xfc, 0x9d, 0x3c, 0xfd, 0x04, 0x58, 0xac, 0xb2, 0xb9, 0x38, 0x8a, 0x61,
	0xe6, 0xc8, 0xe9, 0x41, 0xec, 0xd7, 0x83, 0xd9, 0xaf, 0xe7, 0x9b, 0x5a, 0x92, 0x91, 0x9f, 0xe2,
	0x5f, 0x00, 0xb2, 0xae, 0x58, 0xe2, 0xc6, 0x2a, 0x16, 0x05, 0x46, 0x0d, 0x3e, 0x23, 0x5d, 0x3d,
	0xdc, 0x7e, 0xd0, 0xc3, 0x70, 0x5e, 0x10, 0xdc, 0x02, 0x2b, 0x43, 0x2e, 0xe6, 0xec, 0xd4, 0x4a,
	0x21, 0x59, 0x0c, 0x7b, 0xdc, 0x32, 0x53, 0x73, 0xe0, 0xd6, 0x1c, 0xd8, 0x04, 0xb2, 0x86, 0x23,
	0x08, 0xa4, 0xd6, 0xca, 0x94, 0x8b, 0xb5, 0x28, 0x31, 0x2f, 0x3d, 0x95, 0x90, 0xa6, 0x83, 0x50,
	0x4d, 0x10, 0xd5, 0x49, 0x6c, 0x60, 0x55, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0x79,
	0xed, 0x77, 0x90, 0x01, 0x00, 0x00,
}
