// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomix/primitive/operation.proto

package operation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// OperationType is an enum for specifying the type of operation
type OperationType int32

const (
	OperationType_COMMAND OperationType = 0
	OperationType_QUERY   OperationType = 1
)

var OperationType_name = map[int32]string{
	0: "COMMAND",
	1: "QUERY",
}

var OperationType_value = map[string]int32{
	"COMMAND": 0,
	"QUERY":   1,
}

func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}

func (OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7578e8285e8099c5, []int{0}
}

// AggregateStrategy is an enum for indicating the strategy used to aggregate a field
type AggregateStrategy int32

const (
	AggregateStrategy_CHOOSE_FIRST AggregateStrategy = 0
	AggregateStrategy_APPEND       AggregateStrategy = 1
	AggregateStrategy_SUM          AggregateStrategy = 2
)

var AggregateStrategy_name = map[int32]string{
	0: "CHOOSE_FIRST",
	1: "APPEND",
	2: "SUM",
}

var AggregateStrategy_value = map[string]int32{
	"CHOOSE_FIRST": 0,
	"APPEND":       1,
	"SUM":          2,
}

func (x AggregateStrategy) String() string {
	return proto.EnumName(AggregateStrategy_name, int32(x))
}

func (AggregateStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7578e8285e8099c5, []int{1}
}

var E_Name = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         61000,
	Name:          "atomix.primitive.operation.name",
	Tag:           "bytes,61000,opt,name=name",
	Filename:      "atomix/primitive/operation.proto",
}

var E_Type = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*OperationType)(nil),
	Field:         61001,
	Name:          "atomix.primitive.operation.type",
	Tag:           "varint,61001,opt,name=type,enum=atomix.primitive.operation.OperationType",
	Filename:      "atomix/primitive/operation.proto",
}

var E_Async = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         61002,
	Name:          "atomix.primitive.operation.async",
	Tag:           "varint,61002,opt,name=async",
	Filename:      "atomix/primitive/operation.proto",
}

var E_Aggregate = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*AggregateStrategy)(nil),
	Field:         62000,
	Name:          "atomix.primitive.operation.aggregate",
	Tag:           "varint,62000,opt,name=aggregate,enum=atomix.primitive.operation.AggregateStrategy",
	Filename:      "atomix/primitive/operation.proto",
}

func init() {
	proto.RegisterEnum("atomix.primitive.operation.OperationType", OperationType_name, OperationType_value)
	proto.RegisterEnum("atomix.primitive.operation.AggregateStrategy", AggregateStrategy_name, AggregateStrategy_value)
	proto.RegisterExtension(E_Name)
	proto.RegisterExtension(E_Type)
	proto.RegisterExtension(E_Async)
	proto.RegisterExtension(E_Aggregate)
}

func init() { proto.RegisterFile("atomix/primitive/operation.proto", fileDescriptor_7578e8285e8099c5) }

var fileDescriptor_7578e8285e8099c5 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcb, 0x4e, 0x02, 0x31,
	0x14, 0x86, 0x41, 0x6e, 0x72, 0xbc, 0xa4, 0x76, 0x65, 0x48, 0x34, 0xec, 0x54, 0x12, 0x3b, 0x89,
	0x1a, 0x17, 0xb3, 0x23, 0x5c, 0xa2, 0x8b, 0x61, 0xb0, 0x03, 0x0b, 0x57, 0xa4, 0x40, 0xad, 0x4d,
	0x80, 0x36, 0xa5, 0x1a, 0xe7, 0xad, 0x7c, 0x0c, 0xf5, 0x19, 0x5c, 0xfa, 0x20, 0x86, 0x4e, 0x66,
	0x8c, 0x21, 0xca, 0xfe, 0xfb, 0xcf, 0xff, 0x9d, 0x1f, 0xea, 0xcc, 0xaa, 0xb9, 0x7c, 0xf1, 0xb4,
	0x91, 0x73, 0x69, 0xe5, 0x33, 0xf7, 0x94, 0xe6, 0x86, 0x59, 0xa9, 0x16, 0x44, 0x1b, 0x65, 0x15,
	0xae, 0x25, 0x04, 0xc9, 0x08, 0x92, 0x11, 0xb5, 0xba, 0x50, 0x4a, 0xcc, 0xb8, 0xe7, 0xc8, 0xf1,
	0xd3, 0x83, 0x37, 0xe5, 0xcb, 0x89, 0x91, 0xda, 0x2a, 0x93, 0xa4, 0x1b, 0x27, 0xb0, 0x17, 0xa6,
	0xf8, 0x20, 0xd6, 0x1c, 0xef, 0x40, 0xa5, 0x15, 0x06, 0x41, 0xb3, 0xd7, 0x46, 0x39, 0x5c, 0x85,
	0xd2, 0xdd, 0xb0, 0x43, 0xef, 0x51, 0xbe, 0xe1, 0xc3, 0x41, 0x53, 0x08, 0xc3, 0x05, 0xb3, 0x3c,
	0xb2, 0x86, 0x59, 0x2e, 0x62, 0x8c, 0x60, 0xb7, 0x75, 0x13, 0x86, 0x51, 0x67, 0xd4, 0xbd, 0xa5,
	0xd1, 0x00, 0xe5, 0x30, 0x40, 0xb9, 0xd9, 0xef, 0x77, 0x7a, 0x6d, 0x94, 0xc7, 0x15, 0x28, 0x44,
	0xc3, 0x00, 0x6d, 0xf9, 0x57, 0x50, 0x5c, 0xb0, 0x39, 0xc7, 0xc7, 0x24, 0xf1, 0x21, 0xa9, 0x0f,
	0x09, 0xb8, 0x7d, 0x54, 0xd3, 0x50, 0xaf, 0xea, 0x97, 0x87, 0x6f, 0x9f, 0x85, 0x7a, 0xfe, 0xb4,
	0x4a, 0x1d, 0xed, 0x8f, 0xa0, 0x68, 0x57, 0x46, 0x9b, 0x52, 0xef, 0x2e, 0xb5, 0x7f, 0x71, 0x46,
	0xfe, 0x5e, 0x82, 0xfc, 0x7a, 0x92, 0xba, 0xc3, 0xfe, 0x35, 0x94, 0xd8, 0x32, 0x5e, 0x4c, 0x36,
	0x36, 0x7c, 0xb8, 0x86, 0x6d, 0x9a, 0xe0, 0xfe, 0x0c, 0xaa, 0x2c, 0x9d, 0x02, 0x1f, 0xad, 0x65,
	0xbb, 0x92, 0xcf, 0xb2, 0xe8, 0xeb, 0x57, 0x22, 0x77, 0xfe, 0x9f, 0xdc, 0xda, 0xb0, 0xf4, 0xa7,
	0x60, 0x5c, 0x76, 0x87, 0x2f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xac, 0x91, 0x4d, 0x0a,
	0x02, 0x00, 0x00,
}
